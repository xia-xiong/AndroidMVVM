apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "$project.rootDir/basic.gradle"


android {

    defaultConfig {
        applicationId configs.applicationId
    }
    signingConfigs {
        release {
            keyAlias 'onescore'
            keyPassword KEY_RELEASE_PASS
            storeFile file(KEY_STORE_PATH)
            storePassword KEY_STORE_PASS
        }
        debug {
            keyAlias 'onescore'
            keyPassword KEY_RELEASE_PASS
            storeFile file(KEY_STORE_PATH)
            storePassword KEY_STORE_PASS
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
            jniDebuggable true
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            ext.alwaysUpdateBuildId = false
//            ext.enableCrashlytics = false
            versionNameSuffix ".debug"
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt")
            proguardFiles fileTree(dir: 'rules', include: ['*.pro']).asList().toArray()
        }
        release {
            signingConfig signingConfigs.release
            debuggable false
            jniDebuggable false
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt")
            proguardFiles fileTree(dir: 'rules', include: ['*.pro']).asList().toArray()
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "aiscore_v${variant.versionName}.apk"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    fileTree(dir: 'libs', include: '**/*.aar')
            .each { File file ->
                dependencies.add("implementation", [name: file.name.lastIndexOf('.').with {
                    it != -1 ? file.name[0..<it] : file.name
                }, ext                                  : 'aar'])
            }
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation project(':libsBase')

//    //6.0动态权限
////    implementation "com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar"
//    implementation('com.github.hotchemi:permissionsdispatcher:3.1.0') {
//        exclude group: 'com.android.support'
//    }
//    kapt "com.github.hotchemi:permissionsdispatcher-processor:3.1.0"
//    //开源图片缩放库
////    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
//    implementation 'com.alibaba:fastjson:1.2.48'
////     响应式排版布局
////    implementation 'com.google.android:flexbox:1.0.0'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//
//    // 顶部tab
//    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
//
//    //城市选择器
////    implementation 'liji.library.dev:citypickerview:5.2.2'
//    // 底部选择器
////    api 'com.contrarywind:Android-PickerView:4.1.6'
//    //recyclerview-animators
////    implementation 'jp.wasabeef:recyclerview-animators:3.0.0'
////    implementation 'com.github.ai2101039:YLCircleImageView:v1.0.7'
//    implementation 'androidx.viewpager2:viewpager2:1.1.0-alpha01'
////    implementation 'com.airbnb.android:lottie:2.7.0'
//    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.2'
//
//
////    api 'com.github.Dovar66:DToast:1.1.6'
//
//    implementation "com.chibatching.kotpref:kotpref:2.10.0"
//    implementation "com.chibatching.kotpref:gson-support:2.10.0"
//    implementation "com.chibatching.kotpref:livedata-support:2.10.0"
//
//    implementation 'com.squareup.leakcanary:leakcanary-android:2.2'
//
//    implementation "androidx.room:room-compiler:2.2.5"
//    implementation "androidx.room:room-ktx:2.2.5"
//    implementation "com.trello.rxlifecycle3:rxlifecycle-android-lifecycle-kotlin:3.1.0"
}